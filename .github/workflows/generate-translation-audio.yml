name: Generate Audio

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-audio:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Generate audio
      env:
        ELEVEN_LABS_API_KEY: ${{ secrets.ELEVEN_LABS_API_KEY }}
      run: |
        mkdir -p processed-audio
        python <<EOF
        import os
        import requests
        from datetime import datetime

        # Load API key
        ELEVEN_LABS_API_KEY = os.getenv("ELEVEN_LABS_API_KEY")
        if not ELEVEN_LABS_API_KEY:
            print("Error: ELEVEN_LABS_API_KEY is not set.")
            exit(1)

        # Set API URL and headers
        VOICE_ID = "Mv8AjrYZCBkdsmDHNwcB".strip()
        API_URL = f"https://api.elevenlabs.io/v1/text-to-speech/{VOICE_ID}"
        headers = {
            "xi-api-key": ELEVEN_LABS_API_KEY.strip(),
            "Content-Type": "application/json",
        }

        payload = {"text": "こんにちは、元気ですか？"}

        # Make the request
        response = requests.post(API_URL, json=payload, headers=headers)

        # Save the file if successful
        if response.status_code == 200:
            WORKSPACE = os.getenv("GITHUB_WORKSPACE", ".")
            OUTPUT_DIR = os.path.join(WORKSPACE, "processed-audio")
            os.makedirs(OUTPUT_DIR, exist_ok=True)

            # Use the current date as filename
            current_date = datetime.utcnow().strftime("%Y-%m-%d")
            output_path = os.path.join(OUTPUT_DIR, f"{current_date}.mp3")
            with open(output_path, "wb") as audio_file:
                audio_file.write(response.content)
            print(f"Audio saved to {output_path}")
        else:
            print("Error:", response.text)
        EOF

    - name: Verify generated audio
      run: |
        echo "Checking processed-audio directory contents BEFORE uploading:"
        ls -l processed-audio || echo "No files generated"

    - name: Upload audio artifact
      uses: actions/upload-artifact@v4
      with:
        name: generated-audio
        path: processed-audio/*.mp3

    - name: Verify artifact upload
      run: |
        echo "Checking processed-audio directory contents AFTER uploading:"
        ls -l processed-audio || echo "No files found"
