name: Generate Monthly Summary

on:
  workflow_dispatch:
    inputs:
      year:
        description: 'Year to summarize (e.g., 2024)'
        required: true
      month:
        description: 'Month to summarize (e.g., 12)'
        required: true
  schedule:
    - cron: "0 8 1 * *" # Runs at 8 AM UTC on the 1st of every month

jobs:
  generate-monthly-summary:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Collect Processed Files
        id: collect_files
        run: |
          YEAR=${{ github.event.inputs.year }}
          MONTH=${{ github.event.inputs.month }}
          mkdir -p monthly-summaries
          FILE_LIST=$(find processed/ -type f -name "${YEAR}-${MONTH}-*.txt")
          
          if [ -z "$FILE_LIST" ]; then
            echo "Error: No processed files found for ${YEAR}-${MONTH}."
            exit 1
          fi

          echo "Found files:"
          echo "$FILE_LIST"

          # Combine all content into a single file
          TEMP_CONTENT_FILE="monthly-summaries/temp_content_${YEAR}-${MONTH}.txt"
          > "$TEMP_CONTENT_FILE"

          for FILE in $FILE_LIST; do
            echo "### $FILE ###" >> "$TEMP_CONTENT_FILE"
            cat "$FILE" >> "$TEMP_CONTENT_FILE"
            echo -e "\n\n" >> "$TEMP_CONTENT_FILE"
          done

          echo "All content combined into $TEMP_CONTENT_FILE"
          echo "TEMP_CONTENT_FILE=$TEMP_CONTENT_FILE" >> $GITHUB_ENV

      - name: Use OpenAI to Generate Vocabulary and Summary
        id: openai_summary
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          CONTENT=$(cat "$TEMP_CONTENT_FILE")
          
          PAYLOAD=$(jq -n --arg content "$CONTENT" '{
            model: "gpt-3.5-turbo",
            messages: [
              {
                role: "user",
                content: (
                  "The following text contains processed daily summaries for the month. Please:\n\n" +
                  "1. Extract all vocabulary terms across the summaries.\n" +
                  "2. Count the frequency of each term.\n" +
                  "3. Format the vocabulary section as:\n" +
                  "   Vocabulary Analysis:\n" +
                  "   Word | Frequency\n\n" +
                  "4. Compile all daily summaries in reverse chronological order under a \"Summaries\" section.\n" +
                  "5. Ensure the \"Vocabulary Analysis\" section appears at the top of the document, followed by \"Summaries\".\n\n" +
                  "Input Text:\n" +
                  $content
                )
              }
            ],
            max_tokens: 2000
          }')

          echo "Sending payload to OpenAI API..."

          RESPONSE=$(echo "$PAYLOAD" | curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @-)

          SUMMARY=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // "Error: Unable to process summaries."')

          if [[ "$SUMMARY" == Error* ]]; then
            echo "Error during summary generation: $SUMMARY"
            exit 1
          fi

          OUTPUT_FILE="monthly-summaries/${YEAR}-${MONTH}-summary.txt"
          echo "$SUMMARY" > "$OUTPUT_FILE"
          echo "Summary saved to $OUTPUT_FILE"
          echo "OUTPUT_FILE=$OUTPUT_FILE" >> $GITHUB_ENV

      - name: Upload Monthly Summary
        uses: actions/upload-artifact@v4
        with:
          name: Monthly-Summary-${{ github.event.inputs.year }}-${{ github.event.inputs.month }}
          path: ${{ env.OUTPUT_FILE }}
