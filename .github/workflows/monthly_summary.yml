name: Monthly Summary

on:
  workflow_dispatch:
    inputs:
      year:
        description: "Year of the summary (YYYY, optional)"
        required: false
        default: ""
      month:
        description: "Month of the summary (MM, optional)"
        required: false
        default: ""
  schedule:
    - cron: "0 0 1 * *" # Runs at midnight on the 1st of each month

jobs:
  compile-summary:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Determine Year and Month
        id: determine_year_month
        run: |
          YEAR=${{ github.event.inputs.year }}
          MONTH=${{ github.event.inputs.month }}

          if [ -z "$YEAR" ]; then
            YEAR=$(date -d 'last month' +'%Y')
          fi

          if [ -z "$MONTH" ]; then
            MONTH=$(date -d 'last month' +'%m')
          fi

          echo "YEAR=$YEAR" >> $GITHUB_ENV
          echo "MONTH=$MONTH" >> $GITHUB_ENV
          echo "Determined Year: $YEAR, Month: $MONTH"

      - name: Gather Processed Files
        id: gather_files
        run: |
          FILE_LIST=$(find processed/ -type f -name "${YEAR}-${MONTH}-*.txt")
          if [ -z "$FILE_LIST" ]; then
            echo "Error: No processed files found for ${YEAR}-${MONTH}."
            exit 1
          fi
          echo "Found files:"
          echo "$FILE_LIST"

      - name: Use OpenAI to Generate Vocabulary Summary
        id: generate_vocab_summary
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          VOCAB_LIST=""
          for FILE in $FILE_LIST; do
            VOCAB=$(sed -n '/Vocabulary List:/,/^$/p' "$FILE" | grep -v "Vocabulary List:")
            if [ -n "$VOCAB" ]; then
              VOCAB_LIST+="$VOCAB\n"
            fi
          done

          if [ -z "$VOCAB_LIST" ]; then
            echo "Error: No vocabulary found for ${YEAR}-${MONTH}."
            exit 1
          fi

          PAYLOAD=$(jq -n --arg vocab "$VOCAB_LIST" '{
            model: "gpt-3.5-turbo",
            messages: [
              {
                role: "user",
                content: (
                  "Analyze the following vocabulary list and count the frequency of each unique word. Format the output as:\n\n" +
                  "Word | Frequency\n\n" +
                  "Vocabulary:\n" +
                  $vocab
                )
              }
            ],
            max_tokens: 1000
          }')

          RESPONSE=$(echo "$PAYLOAD" | curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @-)

          VOCAB_SUMMARY=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // "Error: Unable to process vocabulary."')

          if [[ "$VOCAB_SUMMARY" == Error* ]]; then
            echo "Error during vocabulary analysis: $VOCAB_SUMMARY"
            exit 1
          fi

          echo "$VOCAB_SUMMARY" > vocab_summary.txt
          echo "Vocabulary summary created."

      - name: Compile Monthly Summary
        id: compile_summary
        run: |
          mkdir -p monthly-summaries

          OUTPUT_FILE="monthly-summaries/${YEAR}-${MONTH}-summary.txt"

          # Start with vocabulary summary
          echo "Vocabulary Summary:" > "$OUTPUT_FILE"
          cat vocab_summary.txt >> "$OUTPUT_FILE"
          echo -e "\n\nCompiled Daily Summaries:" >> "$OUTPUT_FILE"

          # Add daily summaries in reverse chronological order
          for FILE in $(ls -r processed/${YEAR}-${MONTH}-*.txt); do
            echo -e "\n\n--- Summary for $(basename "$FILE") ---\n" >> "$OUTPUT_FILE"
            cat "$FILE" >> "$OUTPUT_FILE"
          done

          echo "Monthly summary saved to $OUTPUT_FILE"

      - name: Upload Monthly Summary Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Monthly-Summary-${{ env.YEAR }}-${{ env.MONTH }}
          path: monthly-summaries/${{ env.YEAR }}-${{ env.MONTH }}-summary.txt
