name: Daily Process Summary
on:
  workflow_dispatch:
    inputs:
      date:
        description: 'Date to process (YYYY-MM-DD, optional)'
        required: false
        default: ''
  schedule:
    - cron: "0 8 * * *" # Runs daily at 8 AM UTC

jobs:
  process-summary:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Directories
        run: |
          mkdir -p daily-summaries
          mkdir -p processed

      - name: Determine Date
        id: determine_date
        run: |
          if [ -z "${{ github.event.inputs.date }}" ]; then
            PST_DATE=$(date -d '-1 day -8 hours' '+%Y-%m-%d')
          else
            PST_DATE=${{ github.event.inputs.date }}
          fi
          echo "PST_DATE=$PST_DATE" >> $GITHUB_ENV

      - name: Find File
        id: find_file
        run: |
          INPUT_FILE=$(find daily-summaries/ -type f -name "${PST_DATE}.txt" || true)
          if [ -z "$INPUT_FILE" ]; then
            echo "Error: No input file found for date $PST_DATE."
            exit 1
          fi
          echo "INPUT_FILE=$INPUT_FILE" >> $GITHUB_ENV

      - name: Process File with OpenAI API
        id: process_file
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          INPUT_FILE=$(echo $INPUT_FILE)
          OUTPUT_FILE="processed/$(basename $INPUT_FILE)"
          CONTENT=$(cat $INPUT_FILE)

          ESCAPED_PROMPT=$(jq -n --arg text "$CONTENT" '{
            model: "gpt-3.5-turbo",
            messages: [
              {
                role: "user",
                content: (
                  "Translate the following text to JLPT N5 level Japanese and provide detailed annotations:\n" +
                  $text
                )
              }
            ],
            max_tokens: 2000
          }')

          RESPONSE=$(echo "$ESCAPED_PROMPT" | curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @-)

          TRANSLATION=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // "Error: Unable to get translation"')
          echo "$TRANSLATION" > "$OUTPUT_FILE"

          # Save file paths for later steps
          echo "$OUTPUT_FILE" > processed/output_file_path.txt
          echo "$TRANSLATION" > processed/translation_body.txt

      - name: Send Processed File via Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_PASSWORD }}
          subject: "Processed File: $(cat processed/output_file_path.txt)"
          body: |
            Hello,

            The processed summary for the file is as follows:

            $(cat processed/translation_body.txt)

            Best regards,
            GitHub Actions
          to: seanthomasward@gmail.com
          from: ${{ secrets.GMAIL_USERNAME }}
          attachments: $(cat processed/output_file_path.txt)
