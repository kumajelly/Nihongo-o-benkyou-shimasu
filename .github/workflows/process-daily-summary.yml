name: Daily Process Summary
on:
  workflow_dispatch:
    inputs:
      date:
        description: 'Date to process (YYYY-MM-DD)'
        required: false
        default: ''
  schedule:
    - cron: "0 8 * * *" # Runs daily at 8 AM UTC

jobs:
  process-summary:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Directories
        run: |
          mkdir -p daily-summaries
          mkdir -p processed

      - name: Find Previous Day's File
        run: |
          PST_DATE=$(date -d '-1 day -8 hours' '+%Y-%m-%d')
          INPUT_FILE=$(find daily-summaries/ -type f -name "$PST_DATE.txt" || true)
          if [ -z "$INPUT_FILE" ]; then
            echo "Error: No input file found for date $PST_DATE."
            exit 1
          fi
          echo "INPUT_FILE=$INPUT_FILE" >> $GITHUB_ENV

      - name: Process File with OpenAI API
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          OUTPUT_FILE="processed/$(basename $INPUT_FILE)"
          CONTENT=$(cat $INPUT_FILE | jq -Rs . | sed 's/\\n/\n/g') # Properly escape and replace newline artifacts

          ESCAPED_PROMPT=$(jq -n --arg text "$CONTENT" '{
            model: "gpt-3.5-turbo",
            messages: [
              {
                role: "user",
                content: (
                  "Translate the following text to JLPT N5 level Japanese and provide detailed annotations in a clean, structured format. The output should include:\n\n" +
                  "1. **Translation**: Provide the text translated into Japanese with appropriate kanji, hiragana, and grammar, written as complete sentences with correct punctuation.\n\n" +
                  "2. **Romaji**: Provide the romanized pronunciation of the translated Japanese text, corresponding to the Japanese sentences.\n\n" +
                  "3. **Sentence Breakdown**:\n" +
                  "   - Break down each Japanese sentence into key components, explaining:\n" +
                  "     - Particles: Identify and explain their function.\n" +
                  "     - Verbs: Specify the verb, its dictionary form, and its conjugation.\n" +
                  "     - Adjectives: Identify their type (e.g., i-adjective, na-adjective).\n" +
                  "   - Provide a brief explanation of the grammar used.\n\n" +
                  "4. **Vocabulary List**: List the key words used in the translation, with:\n" +
                  "   - Their meanings.\n" +
                  "   - Part of speech (e.g., noun, verb, adjective).\n" +
                  "   - Example sentences, if applicable.\n\n" +
                  "5. **Original English Text**: Include the original English sentences as a footer, clearly marked as \"Original English Text.\"\n\n" +
                  "Ensure the output is well-formatted and easy to read, without any unnecessary escape sequences or line breaks. Use the following text:\n" +
                  $text
                )
              }
            ],
            max_tokens: 2000
          }')

          RESPONSE=$(echo "$ESCAPED_PROMPT" | curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @-)

          echo "API Response: $RESPONSE"
          TRANSLATION=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // "Error: Unable to get translation due to API issues"')
          echo "$TRANSLATION" > $OUTPUT_FILE
          echo "Translation saved to $OUTPUT_FILE."

      - name: Commit and Push Changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add processed/
          git commit -m "Processed summary for $(basename $INPUT_FILE)" || echo "No changes to commit"
          git push || echo "No changes to push"

      - name: Send Processed File via Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_PASSWORD }}
          subject: "nihongo-o-benkyou-shimasu/processed/$(basename $INPUT_FILE)"
          body: |
            Hello,

            The processed summary for the file is as follows:

            $(cat processed/$(basename $INPUT_FILE))

            Best regards,
            GitHub Actions
          to: seanthomasward@gmail.com
          from: ${{ secrets.GMAIL_USERNAME }}
          attachments: processed/$(basename $INPUT_FILE)
